prometheus:
  alertmanager:
    enabled: false
  pushgateway:
    enabled: false
  server:
    service:
      type: ClusterIP
    resources:
      limits:
        memory: 200Mi
      requests:
        memory: 100Mi
    persistentVolume:
      enabled: false
    extraScrapeConfigs:
      - job_name: 'kubernetes-nodes'
        static_configs:
          - targets: ['localhost:9100']

grafana:
  adminPassword: "admin"
  service:
    type: ClusterIP
  persistence:
    enabled: false

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          access: proxy
          url: http://monitoring-prometheus-server.monitoring.svc.cluster.local
          isDefault: true

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default' # You can choose a name for your provider
          orgId: 1
          folder: '' # Or specify a folder like 'Kubernetes'
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default # This path is where the sidecar will look

  dashboards:
    # 'default' should match the 'name' of the dashboardProvider above
    default:
      # Example: Kubernetes / Kubelet dashboard (Gnet ID 15764)
      kubernetes-kubelet: # This is a unique name for your dashboard
        gnetId: 15764 # Replace with the actual Gnet ID from grafana.com/dashboards
        revision: 2 # Optional: specify a revision if you want a particular version
        datasource: Prometheus # This should match the 'name' of your Prometheus datasource defined above

      # Example: Node Exporter Full dashboard (Gnet ID 1860)
      node-exporter-full: # Another unique name for your dashboard
        gnetId: 1860
        revision: 37 # Optional
        datasource: Prometheus # Point to your Prometheus datasource

  # Enable the sidecar that provisions dashboards from ConfigMaps
  sidecar:
    dashboards:
      enabled: true
      label: "grafana_dashboard" # This is the label the sidecar looks for on ConfigMaps
      # searchNamespace: "monitoring" # Optional: If your dashboards ConfigMaps are in a different namespace